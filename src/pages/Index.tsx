import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import Icon from "@/components/ui/icon"
import { useState, useEffect } from "react"

const Index = () => {
  const [currentPhrase, setCurrentPhrase] = useState(0)
  const [showMascot, setShowMascot] = useState(false)
  const [contractForm, setContractForm] = useState({ wish: '', style: '–ì–æ—Ç–∏—á–µ—Å–∫–∏–π' })
  const [mascotPhrase, setMascotPhrase] = useState('')
  const [showFooterEmojis, setShowFooterEmojis] = useState(false)
  const [footerVisible, setFooterVisible] = useState(false)

  const memePhrases = [
    "üíÄ –°–¥–∞–≤–∞–π —Å—É–¥—å–±—É ‚Äî –ø–æ–ª—É—á–∞–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç!",
    "üçé –Ø–±–ª–æ–∫–æ –∑–Ω–∞–Ω–∏–π = –ú–æ–Ω–µ—Ç–∞ –≤–ª–∞—Å—Ç–∏",
    "üìú –¢–≤–æ—è –¥—É—à–∞ —Å—Ç–æ–∏—Ç NFT?",
    "‚ö° –ö–æ–Ω—Ç—Ä–∞–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
    "üåü –ú–∞–≥–∏—è –º–æ–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"
  ]

  const mascotPhrases = [
    "–¢—É—Ç —Ç–æ–ª—å–∫–æ —Å—É–¥—å–±–∞ –∏ —é–º–æ—Ä! üòà",
    "–ù–µ –∑–∞–±—ã–≤–∞–π ‚Äî —ç—Ç–æ –≤—Å—ë —Ä–∞–¥–∏ —Å–º–µ—Ö–∞! üé≠",
    "–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Ç—É—Ç –º–µ–º–Ω—ã–µ, –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–µ! üòÑ",
    "–ò–≥—Ä–∞–π –∏ —É–ª—ã–±–∞–π—Å—è, –¥—Ä—É–≥! ‚ú®",
    "–ú–∞–≥–∏—è –∑–¥–µ—Å—å ‚Äî –≤ –≤–µ—Å–µ–ª—å–µ! ü™Ñ"
  ]

  const handleContractSubmit = () => {
    alert(`üíÄ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ–¥–ø–∏—Å–∞–Ω! –ñ–µ–ª–∞–Ω–∏–µ: "${contractForm.wish}" –≤ —Å—Ç–∏–ª–µ "${contractForm.style}". –ù–æ –ø–æ–º–Ω–∏ - —ç—Ç–æ –≤—Å—ë —à—É—Ç–∫–∞! üòÑ`)
    setContractForm({ wish: '', style: '–ì–æ—Ç–∏—á–µ—Å–∫–∏–π' })
  }

  const handleMascotReaction = (type: string) => {
    const phrases = {
      laugh: ["üòà –•–∞-—Ö–∞! –¢–≤–æ—è —Å—É–¥—å–±–∞ —É–∂–µ —Ä–µ—à–µ–Ω–∞ - —Å–º–µ—è—Ç—å—Å—è!", "üé≠ –ú–µ–º—ã ‚Äî –º–æ—è —Å—Ç–∏—Ö–∏—è!"],
      advice: ["üìù –ú–æ–π —Å–æ–≤–µ—Ç: –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π –º–µ–Ω—è —Å–µ—Ä—å—ë–∑–Ω–æ!", "‚ú® –õ—É—á—à–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç ‚Äî —ç—Ç–æ —É–ª—ã–±–∫–∞!"],
      predict: ["üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é: —Ç—ã –±—É–¥–µ—à—å —Å–º–µ—è—Ç—å—Å—è!", "üéÜ –ë—É–¥—É—â–µ–µ –ø–æ–ª–Ω–æ –º–µ–º–æ–≤ –∏ –≤–µ—Å–µ–ª—å—è!"]
    }
    const randomPhrase = phrases[type as keyof typeof phrases][Math.floor(Math.random() * 2)]
    setMascotPhrase(randomPhrase)
    setTimeout(() => setMascotPhrase(''), 3000)
  }

  useEffect(() => {
    const timer = setTimeout(() => setShowMascot(true), 500)
    const phraseTimer = setInterval(() => {
      setCurrentPhrase((prev) => (prev + 1) % memePhrases.length)
    }, 3000)
    
    // Footer animation trigger
    const footerTimer = setTimeout(() => setFooterVisible(true), 2000)
    
    return () => {
      clearTimeout(timer)
      clearInterval(phraseTimer)
      clearTimeout(footerTimer)
    }
  }, [])

  return (
    <div className="min-h-screen bg-death-black death-note-bg relative overflow-hidden">
      {/* Floating mystical elements */}
      <div className="fixed inset-0 pointer-events-none">
        <div className="absolute top-20 left-10 w-6 h-6 bg-neon-purple rounded-full animate-float opacity-60"></div>
        <div className="absolute top-40 right-20 w-4 h-4 bg-neon-blue rounded-full animate-float opacity-40 animation-delay-1000ms"></div>
        <div className="absolute bottom-32 left-32 w-8 h-8 bg-neon-pink rounded-full animate-float opacity-50 animation-delay-2000ms"></div>
      </div>

      {/* Hero Section */}
      <section className="relative min-h-screen flex items-center justify-center px-4 pt-20">
        <div className="container mx-auto grid lg:grid-cols-2 gap-8 lg:gap-12 items-center">
          {/* Left side - Text content */}
          <div className={`space-y-8 ${showMascot ? 'animate-fade-in' : 'opacity-0'}`}>
            <div className="space-y-4">
              <h1 className="text-4xl sm:text-6xl lg:text-8xl font-bold text-neon-purple neon-text animate-neon-pulse">
                –ë–ê–ù–ö<br />–°–£–î–¨–ë–´
              </h1>
              <div className="h-16">
                <p className="text-xl text-neon-blue animate-glitch">
                  {memePhrases[currentPhrase]}
                </p>
              </div>
              <p className="text-base sm:text-lg text-gray-300 max-w-lg">
                –¢–≤–æ–π –≥–∞–π–¥ –ø–æ —Ç—ë–º–Ω—ã–º –º–µ–º-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è–º!
                –°–æ–∑–¥–∞–≤–∞–π NFT –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å—É–¥—å–±—ã –∏ —Ç–æ—Ä–≥—É–π –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏.
              </p>
            </div>

            <div className="flex flex-col sm:flex-row flex-wrap gap-4">
              <Button className="bg-neon-purple hover:bg-neon-purple/80 text-white px-6 sm:px-8 py-3 text-base sm:text-lg neon-glow">
                <Icon name="FileText" className="mr-2" />
                –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç
              </Button>
              <Button variant="outline" className="border-neon-blue text-neon-blue hover:bg-neon-blue/10 px-6 sm:px-8 py-3 text-base sm:text-lg">
                <Icon name="Coins" className="mr-2" />
                –ú–∞–≥–∏—è –º–æ–Ω–µ—Ç
              </Button>
            </div>
          </div>

          {/* Right side - Mascot and Coin */}
          <div className="relative flex items-center justify-center">
            {/* Mascot */}
            <div className={`relative ${showMascot ? 'animate-scale-in' : 'opacity-0'}`}>
              <img 
                src="/img/bb2cf523-ae57-4a84-8fbd-7584e096e610.jpg"
                alt="Death Note Mascot"
                className="w-60 sm:w-80 h-60 sm:h-80 object-cover rounded-lg neon-glow animate-float"
              />
            </div>

            {/* Floating coin */}
            <div className="absolute -right-8 sm:-right-16 top-8 sm:top-16 animate-spin-slow">
              <img 
                src="/img/7f22151e-7dd0-4d0c-889f-9bb48e7af0df.jpg"
                alt="Mystical Coin"
                className="w-20 sm:w-32 h-20 sm:h-32 object-cover rounded-full neon-glow"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Navigation Menu */}
      <nav className="fixed top-0 w-full bg-death-black/80 backdrop-blur-md border-b border-neon-purple/20 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="text-lg sm:text-2xl font-bold text-neon-purple neon-text">üíÄ –ë–∞–Ω–∫ –°—É–¥—å–±—ã</div>
            <div className="hidden lg:flex space-x-6">
              {['–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã', '–ú–∞—Å–∫–æ—Ç', '–ú–æ–Ω–µ—Ç—ã', '–¢–µ—Ç—Ä–∞–¥—å', '–ò–≥—Ä—ã', '–†–µ–π—Ç–∏–Ω–≥–∏'].map((item) => (
                <Button key={item} variant="ghost" className="text-white hover:text-neon-purple hover:bg-neon-purple/10 text-sm">
                  {item}
                </Button>
              ))}
            </div>
            <Button className="bg-neon-purple hover:bg-neon-purple/80 text-sm sm:text-base">
              <Icon name="User" className="mr-1 sm:mr-2" size={16} />
              –í–æ–π—Ç–∏
            </Button>
          </div>
        </div>
      </nav>

      {/* Contracts Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="text-center mb-12 sm:mb-16">
            <h2 className="text-3xl sm:text-5xl font-bold text-neon-purple neon-text mb-4">
              üìú –ö–û–ù–¢–†–ê–ö–¢–´ –°–£–î–¨–ë–´
            </h2>
            <p className="text-lg sm:text-xl text-gray-300">–°–æ–∑–¥–∞–≤–∞–π –º–µ–º-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –ø–æ–ª—É—á–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ NFT —Å –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–∞–º–∏</p>
          </div>

          <div className="grid lg:grid-cols-2 gap-8 lg:gap-12 items-center">
            {/* Contract Form */}
            <Card className="bg-black/50 border-neon-purple/30 gothic-border">
              <CardHeader>
                <CardTitle className="text-neon-purple neon-text">–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å—É–¥—å–±—ã</CardTitle>
                <CardDescription className="text-gray-400">
                  –í–≤–µ–¥–∏ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ –∏–ª–∏ "—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –≥—Ä–µ—Ö"
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="text-white mb-2 block">–¢–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ:</label>
                  <Textarea 
                    placeholder="–•–æ—á—É —Å—Ç–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º..."
                    className="bg-black/70 border-neon-blue/50 text-white"
                    value={contractForm.wish}
                    onChange={(e) => setContractForm({...contractForm, wish: e.target.value})}
                  />
                </div>
                <div>
                  <label className="text-white mb-2 block">–°—Ç–∏–ª—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:</label>
                  <div className="flex gap-2 flex-wrap">
                    {['–ì–æ—Ç–∏—á–µ—Å–∫–∏–π', '–ú–µ–º–Ω—ã–π', '–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π', '–ê–±—Å—É—Ä–¥–Ω—ã–π'].map((style) => (
                      <Badge 
                        key={style} 
                        variant="outline" 
                        className={`cursor-pointer transition-all ${
                          contractForm.style === style 
                            ? 'border-neon-purple bg-neon-purple/20 text-neon-purple' 
                            : 'border-neon-purple/50 text-neon-purple/70 hover:bg-neon-purple/10 hover:border-neon-purple'
                        }`}
                        onClick={() => setContractForm({...contractForm, style})}
                      >
                        {style}
                      </Badge>
                    ))}
                  </div>
                </div>
                <Button 
                  className="w-full bg-neon-purple hover:bg-neon-purple/80 neon-glow transition-all hover:scale-105" 
                  onClick={handleContractSubmit}
                  disabled={!contractForm.wish.trim()}
                >
                  <Icon name="Scroll" className="mr-2" />
                  –ü–æ–¥–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç
                </Button>
              </CardContent>
            </Card>

            {/* Gallery Preview */}
            <div className="space-y-6">
              <h3 className="text-2xl font-bold text-neon-blue neon-text">üé≠ –ì–∞–ª–µ—Ä–µ—è —à–µ–¥–µ–≤—Ä–æ–≤</h3>
              <div className="grid gap-4">
                {[
                  { title: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ —É—Å–ø–µ—Ö", rating: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", user: "@cryptowizard" },
                  { title: "–ú–µ–º–Ω—ã–π NFT —É–¥–∞—á–∏", rating: "‚≠ê‚≠ê‚≠ê‚≠ê", user: "@memebaron" },
                  { title: "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –±–æ–≥–∞—Ç—Å—Ç–≤–∞", rating: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", user: "@richmagic" }
                ].map((contract, i) => (
                  <Card key={i} className="bg-black/30 border-neon-blue/20 hover:border-neon-blue/50 transition-all cursor-pointer">
                    <CardContent className="p-4">
                      <div className="flex justify-between items-center">
                        <div>
                          <p className="text-white font-medium">{contract.title}</p>
                          <p className="text-gray-400 text-sm">{contract.user}</p>
                        </div>
                        <div className="text-right">
                          <p className="text-neon-purple">{contract.rating}</p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Mascot Section */}
      <section className="py-20 px-4 bg-black/30">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl sm:text-5xl font-bold text-neon-purple neon-text mb-8">
            üé≠ –ù–ê–®–ò–ô –ú–ê–°–ö–û–¢
          </h2>
          <div className="grid lg:grid-cols-3 gap-8">
            <Card className="bg-black/50 border-neon-purple/30">
              <CardHeader>
                <CardTitle className="text-neon-purple">üíÄ –õ–æ—Ä –≥–µ—Ä–æ—è</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-300">
                  –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–∏–¥ –º–µ–∂–¥—É –º–∏—Ä–∞–º–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —Å—É–¥—å–±—ã. 
                  –í–ª–∞–¥–µ–µ—Ç —Ç–µ—Ç—Ä–∞–¥—å—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –∑–Ω–∞–µ—Ç –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã NFT –º–∞–≥–∏–∏.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-black/50 border-neon-blue/30">
              <CardHeader>
                <CardTitle className="text-neon-blue">üé≤ –ú–µ–º-—Ä–µ–∞–∫—Ü–∏–∏</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <Button 
                    variant="outline" 
                    className="w-full border-neon-blue text-neon-blue hover:bg-neon-blue/10 transition-all hover:scale-105"
                    onClick={() => handleMascotReaction('laugh')}
                  >
                    –†–∞—Å—Å–º–µ—à–∏ –º–µ–Ω—è!
                  </Button>
                  <Button 
                    variant="outline" 
                    className="w-full border-neon-pink text-neon-pink hover:bg-neon-pink/10 transition-all hover:scale-105"
                    onClick={() => handleMascotReaction('advice')}
                  >
                    –î–∞–π —Å–æ–≤–µ—Ç
                  </Button>
                  <Button 
                    variant="outline" 
                    className="w-full border-neon-purple text-neon-purple hover:bg-neon-purple/10 transition-all hover:scale-105"
                    onClick={() => handleMascotReaction('predict')}
                  >
                    –ü—Ä–µ–¥—Å–∫–∞–∂–∏ –±—É–¥—É—â–µ–µ
                  </Button>
                  {mascotPhrase && (
                    <div className="mt-4 p-3 bg-neon-purple/20 rounded-lg border border-neon-purple/50 animate-fade-in">
                      <p className="text-neon-purple text-center font-medium">{mascotPhrase}</p>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-black/50 border-neon-pink/30">
              <CardHeader>
                <CardTitle className="text-neon-pink">üèÜ –ê—á–∏–≤–∫–∏ —ç–º–æ—Ü–∏–π</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {['üòà –î—å—è–≤–æ–ª—å—Å–∫–∏–π —Å–º–µ—Ö', 'ü§î –ú—É–¥—Ä–∞—è –∑–∞–¥—É–º—á–∏–≤–æ—Å—Ç—å', '‚ö° –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –≤–æ—Å—Ç–æ—Ä–≥'].map((achievement) => (
                    <Badge key={achievement} className="bg-neon-pink/20 text-neon-pink border-neon-pink/50">
                      {achievement}
                    </Badge>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Coins Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="text-center mb-12 sm:mb-16">
            <h2 className="text-3xl sm:text-5xl font-bold text-neon-blue neon-text mb-4">
              ü™ô –ú–ê–ì–ò–Ø –ú–û–ù–ï–¢
            </h2>
            <p className="text-lg sm:text-xl text-gray-300">–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π, —Ç—Ä–∞—Ç—å –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä—É–π –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ–∫–µ–Ω—ã</p>
          </div>

          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6">
            {[
              { name: "Death Coin", power: "–û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞", rarity: "–û–±—ã—á–Ω–∞—è", color: "neon-purple" },
              { name: "Soul Token", power: "–†–µ–¥–∫–∞—è –º–∞–≥–∏—è", rarity: "–†–µ–¥–∫–∞—è", color: "neon-blue" },
              { name: "Fate NFT", power: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É–¥—å–±—ã", rarity: "–≠–ø–∏—á–µ—Å–∫–∞—è", color: "neon-pink" },
              { name: "Meme Essence", power: "–í–∏—Ä—É—Å–Ω–∞—è —Å–∏–ª–∞", rarity: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", color: "death-red" }
            ].map((coin, i) => (
              <Card key={i} className={`bg-black/50 border-${coin.color}/30 hover:border-${coin.color}/70 transition-all cursor-pointer group`}>
                <CardContent className="p-6 text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-blue-500 rounded-full mx-auto mb-4 animate-spin-slow group-hover:animate-neon-pulse"></div>
                  <h3 className={`text-xl font-bold text-${coin.color} neon-text mb-2`}>{coin.name}</h3>
                  <p className="text-gray-300 text-sm mb-2">{coin.power}</p>
                  <Badge className={`bg-${coin.color}/20 text-${coin.color} border-${coin.color}/50`}>
                    {coin.rarity}
                  </Badge>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Coin Battle */}
          <div className="mt-16 text-center">
            <h3 className="text-2xl sm:text-3xl font-bold text-neon-purple neon-text mb-6 sm:mb-8">‚öîÔ∏è –ú–æ–Ω–µ—Ç–Ω—ã–µ –±–∏—Ç–≤—ã</h3>
            <div className="bg-black/50 rounded-lg p-8 border border-neon-purple/30">
              <p className="text-gray-300 mb-6">–£—á–∞—Å—Ç–≤—É–π –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –±–∏—Ç–≤–∞—Ö –∑–∞ —Ä–µ–¥–∫–∏–µ NFT!</p>
              <div className="flex justify-center gap-4">
                <Button className="bg-neon-purple hover:bg-neon-purple/80">
                  <Icon name="Sword" className="mr-2" />
                  –ù–∞—á–∞—Ç—å –±–∏—Ç–≤—É
                </Button>
                <Button variant="outline" className="border-neon-blue text-neon-blue">
                  <Icon name="Trophy" className="mr-2" />
                  –†–µ–π—Ç–∏–Ω–≥
                </Button>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Death Note / Notebook Section */}
      <section className="py-20 px-4 bg-black/30">
        <div className="container mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold text-neon-purple neon-text mb-4">
              üìñ –¢–ï–¢–†–ê–î–¨ –°–£–î–¨–ë–´
            </h2>
            <p className="text-xl text-gray-300">–¢–≤–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ª–µ–Ω—Ç–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</p>
          </div>

          <div className="grid lg:grid-cols-2 gap-12">
            {/* Personal Feed */}
            <div>
              <h3 className="text-2xl font-bold text-neon-blue neon-text mb-6">üìú –¢–≤–æ–∏ –∑–∞–ø–∏—Å–∏</h3>
              <div className="space-y-4">
                {[
                  { type: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç", title: "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—Ö–∞", status: "–ê–∫—Ç–∏–≤–µ–Ω", date: "–°–µ–≥–æ–¥–Ω—è" },
                  { type: "–ü—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ", title: "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±–æ–≥–∞—Ç—Å—Ç–≤–∞", status: "–ò—Å–ø–æ–ª–Ω–µ–Ω", date: "–í—á–µ—Ä–∞" },
                  { type: "NFT", title: "–ú–µ–º–Ω–∞—è –¥—É—à–∞ #1337", status: "–ü—Ä–æ–¥–∞–Ω", date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥" }
                ].map((record, i) => (
                  <Card key={i} className="bg-black/50 border-neon-purple/20 hover:border-neon-purple/50 transition-all">
                    <CardContent className="p-4">
                      <div className="flex justify-between items-center">
                        <div>
                          <Badge className="bg-neon-purple/20 text-neon-purple border-neon-purple/50 mb-2">
                            {record.type}
                          </Badge>
                          <p className="text-white font-medium">{record.title}</p>
                          <p className="text-gray-400 text-sm">{record.date}</p>
                        </div>
                        <Badge 
                          variant="outline"
                          className={`${
                            record.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'border-neon-blue text-neon-blue' :
                            record.status === '–ò—Å–ø–æ–ª–Ω–µ–Ω' ? 'border-green-400 text-green-400' :
                            'border-neon-pink text-neon-pink'
                          }`}
                        >
                          {record.status}
                        </Badge>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>

            {/* Top Records */}
            <div>
              <h3 className="text-2xl font-bold text-neon-pink neon-text mb-6">üëë –¢–æ–ø –∑–∞–ø–∏—Å–µ–π</h3>
              <div className="space-y-4">
                {[
                  { title: "–Ø –ø—Ä–æ–¥–∞–ª –¥—É—à—É –∑–∞ NFT –æ–±–µ–∑—å—è–Ω—ã", votes: "1337", author: "@cryptodegenerate" },
                  { title: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ –º–∏–ª–ª–∏–æ–Ω –ª–∞–π–∫–æ–≤", votes: "666", author: "@viralking" },
                  { title: "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –≤–µ—á–Ω–æ–≥–æ —Ö–æ–ª–¥–∞", votes: "420", author: "@diamondhands" }
                ].map((record, i) => (
                  <Card key={i} className="bg-black/50 border-neon-pink/20 hover:border-neon-pink/50 transition-all cursor-pointer">
                    <CardContent className="p-4">
                      <div className="flex justify-between items-start">
                        <div className="flex-1">
                          <p className="text-white font-medium mb-1">{record.title}</p>
                          <p className="text-gray-400 text-sm">{record.author}</p>
                        </div>
                        <div className="text-right">
                          <p className="text-neon-pink font-bold">üëç {record.votes}</p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Mini Games Section */}
      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold text-neon-blue neon-text mb-4">
              üéÆ –ú–ò–ù–ò-–ò–ì–†–´
            </h2>
            <p className="text-xl text-gray-300">–ò–≥—Ä–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä–∞–¥—ã</p>
          </div>

          <div className="grid lg:grid-cols-3 gap-8">
            {[
              {
                title: "üîÆ –£–≥–∞–¥–∞–π –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ!",
                description: "–ü—Ä–µ–¥—Å–∫–∞–∂–∏ –±—É–¥—É—â–µ–µ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–∞",
                reward: "–ú–µ–º–Ω—ã–π NFT",
                color: "neon-purple"
              },
              {
                title: "üçé –Ø–±–ª–æ—á–Ω—ã–π –±–∞—Ç—Ç–ª",
                description: "–°–æ–±–µ—Ä–∏ –±–æ–ª—å—à–µ –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤",
                reward: "Death Coins",
                color: "neon-blue"
              },
              {
                title: "‚ö° –¢—ë–º–Ω—ã–µ —Å–¥–µ–ª–∫–∏",
                description: "–ë–æ–µ–≤–∞—è –º–∏–Ω–∏-–∏–≥—Ä–∞ –Ω–∞ –≤–µ–∑–µ–Ω–∏–µ",
                reward: "Rare Tokens",
                color: "neon-pink"
              }
            ].map((game, i) => (
              <Card key={i} className={`bg-black/50 border-${game.color}/30 hover:border-${game.color}/70 transition-all cursor-pointer group`}>
                <CardHeader>
                  <CardTitle className={`text-${game.color} neon-text`}>{game.title}</CardTitle>
                  <CardDescription className="text-gray-400">
                    {game.description}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="text-center">
                      <Badge className={`bg-${game.color}/20 text-${game.color} border-${game.color}/50`}>
                        –ù–∞–≥—Ä–∞–¥–∞: {game.reward}
                      </Badge>
                    </div>
                    <Button className={`w-full bg-${game.color} hover:bg-${game.color}/80 group-hover:neon-glow`}>
                      <Icon name="Play" className="mr-2" />
                      –ò–≥—Ä–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="py-16 px-4 bg-black/50 border-t border-neon-purple/20">
        <div className="container mx-auto">
          <div className="grid lg:grid-cols-4 gap-8">
            <div>
              <h3 className="text-2xl font-bold text-neon-purple neon-text mb-4">üíÄ –ë–∞–Ω–∫ –°—É–¥—å–±—ã</h3>
              <p className="text-gray-400">
                –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π NFT –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏ —Å—É–¥—å–±—ã –∏ –º–µ–º–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏.
              </p>
            </div>
            
            <div>
              <h4 className="text-lg font-semibold text-white mb-4">–†–∞–∑–¥–µ–ª—ã</h4>
              <div className="space-y-2">
                {['–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã', '–ú–∞—Å–∫–æ—Ç', '–ú–æ–Ω–µ—Ç—ã', '–¢–µ—Ç—Ä–∞–¥—å', '–ò–≥—Ä—ã'].map((item) => (
                  <p key={item} className="text-gray-400 hover:text-neon-purple cursor-pointer transition-colors">
                    {item}
                  </p>
                ))}
              </div>
            </div>

            <div>
              <h4 className="text-lg font-semibold text-white mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <div className="space-y-2">
                <p className="text-gray-400 hover:text-neon-blue cursor-pointer transition-colors">FAQ</p>
                <p className="text-gray-400 hover:text-neon-blue cursor-pointer transition-colors">–ü—Ä–∞–≤–∏–ª–∞</p>
                <p className="text-gray-400 hover:text-neon-blue cursor-pointer transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</p>
              </div>
            </div>

            <div>
              <h4 className="text-lg font-semibold text-white mb-4">–°–≤—è–∑—å</h4>
              <div className="flex space-x-4">
                <Button size="sm" variant="outline" className="border-neon-purple text-neon-purple hover:bg-neon-purple/10">
                  <Icon name="MessageCircle" />
                </Button>
                <Button size="sm" variant="outline" className="border-neon-blue text-neon-blue hover:bg-neon-blue/10">
                  <Icon name="Mail" />
                </Button>
              </div>
            </div>
          </div>

          <div className="mt-12 pt-8 border-t border-neon-purple/20 text-center">
            <p className="text-gray-400">
              ¬© 2024 –ë–∞–Ω–∫ –°—É–¥—å–±—ã. –í—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –º–∞–≥–∏–µ–π. 
              <span className="text-neon-purple ml-2">‚ö° Powered by Death Note Energy</span>
            </p>
          </div>
        </div>
      </footer>

      {/* Meme Disclaimer Footer */}
      <div className={`relative bg-gradient-to-r from-black via-death-black to-black py-12 px-4 border-t-2 border-neon-purple/30 overflow-hidden ${
        footerVisible ? 'animate-slide-in-right' : 'opacity-0'
      }`}>
        {/* Animated background elements */}
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-4 left-10 w-16 h-16 bg-neon-purple rounded-full animate-float blur-sm"></div>
          <div className="absolute bottom-6 right-20 w-12 h-12 bg-neon-blue rounded-full animate-float blur-sm animation-delay-1000ms"></div>
          <div className="absolute top-1/2 left-1/4 w-8 h-8 bg-neon-pink rounded-full animate-float blur-sm animation-delay-2000ms"></div>
        </div>

        <div className="container mx-auto relative">
          <div className="flex flex-col lg:flex-row items-center justify-between gap-8">
            {/* Left side - Animated Mascot */}
            <div className="relative">
              <div className={`${footerVisible ? 'animate-bounce' : ''} transition-all duration-1000`}>
                <img 
                  src="/img/bb2cf523-ae57-4a84-8fbd-7584e096e610.jpg"
                  alt="Mascot waving"
                  className="w-24 h-24 object-cover rounded-full neon-glow cursor-pointer hover:scale-110 transition-transform"
                  onClick={() => {
                    const randomPhrase = mascotPhrases[Math.floor(Math.random() * mascotPhrases.length)]
                    setMascotPhrase(randomPhrase)
                    setTimeout(() => setMascotPhrase(''), 3000)
                  }}
                />
              </div>
              {mascotPhrase && (
                <div className="absolute -top-16 left-1/2 transform -translate-x-1/2 bg-neon-purple/90 text-white px-4 py-2 rounded-lg text-sm whitespace-nowrap animate-fade-in z-10">
                  {mascotPhrase}
                </div>
              )}
            </div>

            {/* Center - Main disclaimer text */}
            <div className="flex-1 text-center relative">
              <div className={`${footerVisible ? 'animate-fade-in' : 'opacity-0'} transition-all duration-2000 delay-500`}>
                <h3 className="text-2xl font-bold text-neon-purple neon-text mb-4">
                  üé≠ –í–ù–ò–ú–ê–ù–ò–ï! üé≠
                </h3>
                <div className="bg-black/60 rounded-lg p-6 border border-neon-purple/50 backdrop-blur">
                  <p className="text-gray-300 leading-relaxed max-w-3xl mx-auto">
                    –≠—Ç–æ—Ç —Å–∞–π—Ç ‚Äî <span className="text-neon-purple font-bold">—à—É—Ç–æ—á–Ω—ã–π –º–µ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç</span> –¥–ª—è –≤–µ—Å–µ–ª—å—è –∏ –∫—Ä–µ–∞—Ç–∏–≤–∞. 
                    –í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏, –º–µ–º-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –º–æ–Ω–µ—Ç—ã –∑–¥–µ—Å—å <span className="text-neon-blue font-bold">–≤—ã–º—ã—à–ª–µ–Ω—ã</span>, 
                    —Å–æ–∑–¥–∞–Ω—ã —Ä–∞–¥–∏ —à—É—Ç–æ–∫, –∏ <span className="text-death-red font-bold">–Ω–µ –∏–º–µ—é—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã</span>. 
                    –ù–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ "–ë–∞–Ω–∫ –°—É–¥—å–±—ã" –≤—Å–µ—Ä—å—ë–∑ ‚Äî 
                    <span className="text-neon-pink font-bold">–∏–≥—Ä–∞–π—Ç–µ –∏ —É–ª—ã–±–∞–π—Ç–µ—Å—å!</span>
                  </p>
                </div>
              </div>
            </div>

            {/* Right side - Animated Coin */}
            <div className="relative">
              <div 
                className={`cursor-pointer ${footerVisible ? 'animate-spin-slow' : ''} transition-all duration-1000 hover:scale-110`}
                onMouseEnter={() => setShowFooterEmojis(true)}
                onMouseLeave={() => setShowFooterEmojis(false)}
              >
                <img 
                  src="/img/7f22151e-7dd0-4d0c-889f-9bb48e7af0df.jpg"
                  alt="Mystical Coin"
                  className="w-20 h-20 object-cover rounded-full neon-glow"
                />
              </div>
              
              {/* Floating emojis on hover */}
              {showFooterEmojis && (
                <div className="absolute inset-0 pointer-events-none">
                  <div className="absolute -top-8 -left-4 animate-bounce text-2xl">üòÑ</div>
                  <div className="absolute -top-6 -right-6 animate-bounce text-2xl animation-delay-200ms">üçé</div>
                  <div className="absolute -bottom-8 -left-2 animate-bounce text-2xl animation-delay-400ms">üìú</div>
                  <div className="absolute -bottom-6 -right-4 animate-bounce text-2xl animation-delay-600ms">‚ú®</div>
                </div>
              )}
            </div>
          </div>

          {/* Bottom signature */}
          <div className={`mt-8 text-center ${footerVisible ? 'animate-fade-in' : 'opacity-0'} transition-all duration-3000 delay-1000`}>
            <p className="text-sm text-gray-500">
              üéÜ –° –ª—é–±–æ–≤—å—é –∫ –º–µ–º–∞–º –∏ —é–º–æ—Ä—É –æ—Ç –∫–æ–º–∞–Ω–¥—ã poehali.dev üöÄ
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Index