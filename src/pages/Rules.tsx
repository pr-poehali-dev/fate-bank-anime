import { useEffect, useState } from 'react'
import Icon from '@/components/ui/icon'
import InteractiveBackground from '@/components/InteractiveBackground'
import RandomMascot from '@/components/RandomMascot'

const Rules = () => {
  const [visibleSections, setVisibleSections] = useState<number[]>([])
  const [mascotTrigger, setMascotTrigger] = useState(false)

  const rules = [
    {
      title: "üìú –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ë–∞–Ω–∫–∞ –°—É–¥—å–±—ã",
      content: [
        "‚Ä¢ –í—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∑–∞–∫–ª—é—á–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–¥–∏ –≤–µ—Å–µ–ª—å—è –∏ –º–µ–º–æ–≤",
        "‚Ä¢ –ù–∏–∫–∞–∫–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –∏–º–µ—é—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ",
        "‚Ä¢ –ú–∞—Å–∫–æ—Ç –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Å –º—É–¥—Ä—ã–º–∏ —à—É—Ç–∫–∞–º–∏",
        "‚Ä¢ –Ø–±–ª–æ–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–∞–¥–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"
      ],
      icon: "ScrollText"
    },
    {
      title: "üéÆ –ü—Ä–∞–≤–∏–ª–∞ –º–∏–Ω–∏-–∏–≥—Ä",
      content: [
        "‚Ä¢ –í '–£–≥–∞–¥–∞–π –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ!' –Ω—É–∂–Ω–æ —Ä–∞–∑–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∫–∏ –º–∞—Å–∫–æ—Ç–∞",
        "‚Ä¢ '–Ø–±–ª–æ—á–Ω—ã–π –±–∞—Ç—Ç–ª' ‚Äî —Å–æ–±–∏—Ä–∞–π —Å–≤–µ—Ç—è—â–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã –Ω–∞ –≤—Ä–µ–º—è",
        "‚Ä¢ '–¢—ë–º–Ω—ã–µ —Å–¥–µ–ª–∫–∏' ‚Äî —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ —Å –º–µ–º–Ω—ã–º–∏ –≤—ã–±–æ—Ä–∞–º–∏",
        "‚Ä¢ –í—Å–µ –∏–≥—Ä—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –Ω–∞—á–∏—Å–ª—è—é—Ç –º–µ–º-–æ—á–∫–∏"
      ],
      icon: "Gamepad2"
    },
    {
      title: "üí´ –ú–∞–≥–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞",
      content: [
        "‚Ä¢ –ö–∞–∂–¥—ã–π –∫–ª–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã",
        "‚Ä¢ –ù–µ–æ–Ω–æ–≤—ã–µ —Ä—É–Ω—ã —Ä–µ–∞–≥–∏—Ä—É—é—Ç –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏",
        "‚Ä¢ –ß–µ—Ä–Ω–∏–ª—å–Ω—ã–µ –≤—Å–ø–ª–µ—Å–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –≤–∞–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö",
        "‚Ä¢ –ú–µ–º-–º–æ–Ω–µ—Ç–∞ –∫—Ä—É—Ç–∏—Ç—Å—è –∏ —Å–≤–µ—Ç–∏—Ç—Å—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏"
      ],
      icon: "Sparkles"
    },
    {
      title: "üé≠ –≠—Ç–∏–∫–∞ –∏ –≤–µ—Å–µ–ª—å–µ",
      content: [
        "‚Ä¢ –û—Ç–Ω–æ—Å–∏—Å—å –∫ —Å–∞–π—Ç—É –∫–∞–∫ –∫ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—é, –∞ –Ω–µ —Å–µ—Ä—å—ë–∑–Ω–æ–º—É –¥–µ–ª—É",
        "‚Ä¢ –ú–∞—Å–∫–æ—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞–ø–æ–º–Ω–∏—Ç, —á—Ç–æ —ç—Ç–æ –≤—Å—ë –¥–ª—è —Å–º–µ—Ö–∞",
        "‚Ä¢ –ù–µ —Å—Ç–æ–∏—Ç –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å '–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã' –±—É–∫–≤–∞–ª—å–Ω–æ",
        "‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –ø–æ–ª—É—á–∏—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –∏ —É–ª—ã–±–Ω—É—Ç—å—Å—è"
      ],
      icon: "Heart"
    }
  ]

  useEffect(() => {
    const timer = setInterval(() => {
      setVisibleSections(prev => {
        if (prev.length < rules.length) {
          return [...prev, prev.length]
        }
        return prev
      })
    }, 500)

    const mascotTimer = setTimeout(() => setMascotTrigger(true), 2000)

    return () => {
      clearInterval(timer)
      clearTimeout(mascotTimer)
    }
  }, [])

  return (
    <div className="min-h-screen pt-20 pb-16 px-4">
      <InteractiveBackground />
      
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12 animate-fade-in">
          <h1 className="text-5xl font-bold text-white mb-4 bg-gradient-to-r from-neon-purple via-neon-pink to-neon-blue bg-clip-text text-transparent">
            –ü—Ä–∞–≤–∏–ª–∞ –ë–∞–Ω–∫–∞ –°—É–¥—å–±—ã
          </h1>
          <p className="text-xl text-gray-300 max-w-2xl mx-auto">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –º–µ–º–æ–≤, –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–≥–æ –≤–µ—Å–µ–ª—å—è! 
            –ò–∑—É—á–∏ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞—à–µ–≥–æ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞.
          </p>
        </div>

        {/* Rules Sections */}
        <div className="space-y-8">
          {rules.map((rule, index) => (
            <div
              key={index}
              className={`transform transition-all duration-700 ${
                visibleSections.includes(index)
                  ? 'translate-y-0 opacity-100'
                  : 'translate-y-10 opacity-0'
              }`}
            >
              <div className="bg-death-gray/20 backdrop-blur-sm border border-neon-purple/30 rounded-2xl p-8 hover:border-neon-purple/50 transition-all duration-300 group">
                <div className="flex items-start space-x-4">
                  <div className="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-neon-purple to-neon-pink rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                    <Icon name={rule.icon as any} size={24} className="text-white" />
                  </div>
                  
                  <div className="flex-1">
                    <h2 className="text-2xl font-bold text-white mb-4 group-hover:text-neon-purple transition-colors">
                      {rule.title}
                    </h2>
                    
                    <div className="space-y-3">
                      {rule.content.map((item, itemIndex) => (
                        <div
                          key={itemIndex}
                          className="flex items-start space-x-3 text-gray-300 group-hover:text-white transition-colors"
                        >
                          <div className="w-2 h-2 bg-neon-purple rounded-full mt-2 flex-shrink-0" />
                          <p className="leading-relaxed">{item}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {/* Decorative glow effect */}
                <div className="absolute inset-0 rounded-2xl bg-gradient-to-r from-neon-purple/5 to-neon-pink/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10" />
              </div>
            </div>
          ))}
        </div>

        {/* Bottom Notice */}
        <div className="mt-16 text-center">
          <div className="inline-flex items-center space-x-3 bg-neon-purple/10 border border-neon-purple/30 rounded-full px-8 py-4">
            <Icon name="AlertCircle" size={24} className="text-neon-purple" />
            <p className="text-white font-medium">
              –ü–æ–º–Ω–∏: —ç—Ç–æ –≤—Å—ë —Ä–∞–¥–∏ –≤–µ—Å–µ–ª—å—è –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞! 
            </p>
            <Icon name="Smile" size={24} className="text-neon-pink" />
          </div>
        </div>

        {/* Interactive elements */}
        <div className="fixed bottom-8 right-8">
          <button
            onClick={() => setMascotTrigger(true)}
            className="w-16 h-16 bg-gradient-to-br from-neon-purple to-neon-pink rounded-full flex items-center justify-center hover:scale-110 transition-transform shadow-lg shadow-neon-purple/25"
          >
            <Icon name="HelpCircle" size={28} className="text-white" />
          </button>
        </div>
      </div>

      <RandomMascot 
        trigger={mascotTrigger}
        onComplete={() => setMascotTrigger(false)}
      />
    </div>
  )
}

export default Rules